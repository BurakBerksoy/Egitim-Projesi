spring.application.name=spring-data-jpa

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=1
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=egitim_oyunu_db

app.jwt.secret=egitimOyunuGizliAnahtari2025SuperGucluOlmaliBuAnahtarCokUzunOlmali
app.jwt.expirationMs=86400000
app.jwt.refreshExpirationMs=604800000

app.cors.allowedOrigins=http://localhost:5173,http://127.0.0.1:5173

server.port=8080

# Google OAuth2 yapılandırması - Google Cloud'dan edindiğiniz bilgileri eklemelisiniz
# Google OAuth2 istemci bilgileri (her zaman gerçek değerlerle değiştirilmelidir)
# Bu değerleri Google Cloud Console'dan almalısınız: https://console.cloud.google.com/apis/credentials
# ÖNEMLİ: Bu değerleri doldurduğunuzdan emin olun, aksi takdirde OAuth2 ile giriş çalışmayacaktır!
spring.security.oauth2.client.registration.google.client-id=319884662535-jtl2e5ut4vgntihbiauicjrnvqd22vi2.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name

# OAuth2 yönlendirme - frontend portunuz 5173 olduğu için değiştirildi
app.oauth2.authorizedRedirectUris=http://localhost:5173/oauth2/redirect

# Logging ayarları
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.com.example.egitim_oyunu_backend=DEBUG

# E-posta Ayarları (Gmail için)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=burakberksoy8080@gmail.com
spring.mail.password=your-app-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.debug=true
spring.mail.test-connection=false

# E-posta gönderici ayarı
app.mail.sender=burakberksoy8080gmail.com

# Simülasyon modu - gerçek e-posta gönderimi başarısız olursa token'ı frontend'e döndür
app.mail.simulation.enabled=true

# Not: Gmail kullanırken "App Password" kullanmanız gerekiyor
# 1. Google hesabınızda 2FA'yı etkinleştirin
# 2. https://myaccount.google.com/apppasswords adresine gidin
# 3. Uygulama için bir şifre oluşturun ve yukarıda kullanın

# Frontend URL
app.frontend.url=http://localhost:5173

# Mail validator otokonfigürasyonunu devre dışı bırak
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration